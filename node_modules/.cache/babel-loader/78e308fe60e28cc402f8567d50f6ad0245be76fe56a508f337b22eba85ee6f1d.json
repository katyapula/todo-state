{"ast":null,"code":"// const todos = [\n//   { id: 1, completed: true },\n//   { id: 2, completed: false },\n//   { id: 3, completed: true },\n//   { id: 4, completed: false },\n//   { id: 5, completed: true },\n// ];\n\n// const filterConfig = [\n//   { field: \"completed\", value: [true, true], type: \"intersect\" },\n//   { field: \"sdf\", value: true, type: \"intersect\" },\n//   { field: \"sdhukguhf\", value: true, type: \"intersect\" },\n// ];\nfunction applyFilters(todo, filterConfig) {\n  filterConfig.map(filter => {\n    console.log(todo[filter.field], filter.value);\n    return todo[filter.field] === filter.value;\n  });\n}\nexport function filter(todos, filterConfig) {\n  return todos.filter(todo => applyFilters(todo, filterConfig));\n}","map":{"version":3,"names":["applyFilters","todo","filterConfig","map","filter","console","log","field","value","todos"],"sources":["/Users/katherine/Documents/exercises/todo-list/src/utils/filter.ts"],"sourcesContent":["import { useTodosQuery } from \"../hooks/useTodosQuery\";\nimport React, { useState } from \"react\";\nimport { TFilterConfig, TTodo } from \"../types\";\n\n// const todos = [\n//   { id: 1, completed: true },\n//   { id: 2, completed: false },\n//   { id: 3, completed: true },\n//   { id: 4, completed: false },\n//   { id: 5, completed: true },\n// ];\n\n// const filterConfig = [\n//   { field: \"completed\", value: [true, true], type: \"intersect\" },\n//   { field: \"sdf\", value: true, type: \"intersect\" },\n//   { field: \"sdhukguhf\", value: true, type: \"intersect\" },\n// ];\n\ntype TApplyFiltersProps = {\n  todo: TTodo;\n  filterConfig: TFilterConfig;\n};\n\ntype TFilterProps = {\n  todos: TTodo[];\n  filterConfig: TFilterConfig;\n};\n\nfunction applyFilters<TApplyFiltersProps>(todo, filterConfig) {\n  filterConfig.map((filter) => {\n    console.log(todo[filter.field], filter.value);\n    return todo[filter.field] === filter.value;\n  });\n}\n\nexport function filter<TFilterProps>(todos, filterConfig) {\n  return todos.filter((todo) => applyFilters(todo, filterConfig));\n}\n"],"mappings":"AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAYA,SAASA,YAAYA,CAAqBC,IAAI,EAAEC,YAAY,EAAE;EAC5DA,YAAY,CAACC,GAAG,CAAEC,MAAM,IAAK;IAC3BC,OAAO,CAACC,GAAG,CAACL,IAAI,CAACG,MAAM,CAACG,KAAK,CAAC,EAAEH,MAAM,CAACI,KAAK,CAAC;IAC7C,OAAOP,IAAI,CAACG,MAAM,CAACG,KAAK,CAAC,KAAKH,MAAM,CAACI,KAAK;EAC5C,CAAC,CAAC;AACJ;AAEA,OAAO,SAASJ,MAAMA,CAAeK,KAAK,EAAEP,YAAY,EAAE;EACxD,OAAOO,KAAK,CAACL,MAAM,CAAEH,IAAI,IAAKD,YAAY,CAACC,IAAI,EAAEC,YAAY,CAAC,CAAC;AACjE"},"metadata":{},"sourceType":"module","externalDependencies":[]}